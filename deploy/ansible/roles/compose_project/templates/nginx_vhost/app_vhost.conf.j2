{{ ansible_managed | comment }}

upstream backend {
    server {{ app_backend_service_name }}:5000;
}

server {
    listen 80;
{% if app_fqdn is defined %}
    server_name     {{ app_fqdn }} www.{{ app_fqdn }};
{% else %}
    server_name     {{ ansible_hostname }};
{% endif %}

    location / {
        return 301 https://{{ app_fqdn | default(ansible_fqdn) }}$request_uri;
    }

    location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/acme/;
        autoindex off;
        default_type "text/plain";
    }
}

server {
    listen 443 ssl http2;
    ssl_certificate             "ssl/cert.crt";
    ssl_certificate_key         "ssl/cert.key";
{% if app_letsencrypt is defined and app_letsencrypt %}
    ssl_stapling                on;
    ssl_stapling_verify         on;
{% endif %}

{% if app_fqdn is defined %}
    server_name     {{ app_fqdn }} www.{{ app_fqdn }};
{% else %}
    server_name      {{ ansible_hostname }};
{% endif %}

    # Proxy Params
    proxy_buffering                 on;
    proxy_connect_timeout           3;
    proxy_read_timeout              30;
    proxy_send_timeout              30;
    proxy_buffers                   16 16k;
    proxy_cache_min_uses            2;
    proxy_cache_valid               30s;
    proxy_cache_valid               403 404 1m;
    proxy_cache_valid               500 502 504 1s;
    proxy_cache_use_stale           error timeout invalid_header updating http_504;
    proxy_http_version              1.1;

    proxy_redirect                  off;
    proxy_intercept_errors          off;

    client_max_body_size            10m;
    client_body_buffer_size         16k;

    #proxy_set_header    X-URI   $request_uri;
    proxy_set_header              Host $host;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html =404;
    }

    location /api {
        proxy_pass http://backend;
        #proxy_cache main;
    }

    location /api/v1/user {
        proxy_pass http://backend;
    }
}
